CC = gcc
OPTIMIZE = -O2
MEMORY_CHECK =
WARNING = -Wall -Wextra -Winline
DEBUG = -DNDEBUG

CFLAGS = $(OPTIMIZE) $(MEMORY_CHECK) $(WARNING) $(DEBUG) -I $(ROOT_DIR)

ROOT_DIR = $(abspath .)/

INC_DIR = $(ROOT_DIR)include/
SRC_DIR = $(ROOT_DIR)src/
LIB_DIR = $(ROOT_DIR)lib/
OBJ_DIR := $(ROOT_DIR)obj/


OBJS = $(OBJ_DIR)setint_map.o $(OBJ_DIR)strx_map.o $(OBJ_DIR)kmap.o $(OBJ_DIR)bitset.o \
       $(OBJ_DIR)hashset.o $(OBJ_DIR)kiqueue.o $(OBJ_DIR)kqueue.o $(OBJ_DIR)karray.o \
       $(OBJ_DIR)ko.o $(OBJ_DIR)ki.o  $(OBJ_DIR)kobuf.o $(OBJ_DIR)kibuf.o $(OBJ_DIR)kofile.o \
       $(OBJ_DIR)kifile.o $(OBJ_DIR)ko_printf.o	$(OBJ_DIR)lib.o $(OBJ_DIR)kfs.o $(OBJ_DIR)kstring.o

PIC_OBJS = $(patsubst %.o, %.pic.o, $(OBJS))


all : $(LIB_DIR)libk.a $(LIB_DIR)libk.pic.a $(LIB_DIR)libk.so


$(LIB_DIR)libk.a : $(OBJS) | create_dir
	$(AR) $@ $^

$(LIB_DIR)libk.pic.a : $(PIC_OBJS) | create_dir
	$(AR) $@ $^

$(LIB_DIR)libk.so : $(PIC_OBJS) | create_dir
	$(CC) -shared -o $@ $^


