#ifndef __KEVCC_LEXGEN_LEXER_H
#define __KEVCC_LEXGEN_LEXER_H

#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#define LEX_DEAD    (255)

$r token-attribute-difinition $:
typedef union tagTokenAttr {
  int64_t ival;
  double fval;
  char* sval;
} TokenAttr;
$;

$r token-definition $:
typedef struct tagToken {
  size_t begin;
  size_t end;
  int kind;
  TokenAttr attr;
} Token;
$;

typedef uint$r state-length $:8$;_t (*TransTab)[$r charset-size $:256$;];
typedef void Callback(Token*, uint8_t*);

typedef struct tagLex {
  uint8_t* buffer;
  TransTab table;
  int* patterns;
  size_t start_state;
  Callback** callbacks;
} $r lexer-name $:Lex$;;


bool $r function-prefix $:lex$;_init($r lexer-name $:Lex$;* lex, char* filepath);
void $r function-prefix $:lex$;_destroy($r lexer-name $:Lex$;* lex);
void $r function-prefix $:lex$;_next($r lexer-name $:Lex$;* lex, Token* token);
char* $r function-prefix $:lex$;_get_info($r lexer-name $:Lex$;* lex, int kind);

static inline void $r function-prefix $:lex$;_token_init(Token* token) {
  token->end = 0;
}

#endif
