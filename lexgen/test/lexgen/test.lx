import "charset/posix

non-ascii-char = $[\xF0-\xF7][\x80-\xBF]{3} | [\xE0-\xEF][\x80-\xBF]{2} | [\xC0-\xDF][\x80-\xBF]{1}
blank = $[\ \n\t\r]*


def while (TK_WHILE): $while
def if (TK_IF): $if
def else (TK_ELSE): $else
def for (TK_FOR): $for
def do (TK_DO): $do
def fn (TK_FN): $fn
def lambda (TK_LAMBDA): $lambda
def let (TK_LET): $let
def break (TK_BREAK): $break
def continue (TK_CONTINUE): $continue
def return (TK_RET): $return
def i32 (TK_I32): $i32
def i64 (TK_I64): $i64
def i16 (TK_I16): $i16
def i8 (TK_U8): $i8
def u32 (TK_U32): $u32
def u64 (TK_U64): $u64
def u16 (TK_U16): $u16
def u8 (TK_I8): $u8

def '[' (TK_LBC): $\[
def ']' (TK_RBC): $\]
def '{' (TK_LBK): $\{
def '}' (TK_RBK): $\}
def '(' (TK_OPEN): $\(
def ')' (TK_CLOSE): $\)
def '<' (TK_LAB): $<
def '>' (TK_RAB): $>
def '+' (TK_ADD): $\+
def '-' (TK_SUB): $\-
def '*' (TK_MUL): $\*
def '/' (TK_DIV): $/
def '=' (TK_ASSIGN): $=
def ':' (TK_COLON): $:
def ';' (TK_SEMI): $;
def ',' (TK_COMMA): $,
def '.' (TK_DOT): $\.
def '|' (TK_BAR): $\|
def '||' (TK_DBAR): $\|\|
def '&' (TK_AND): $&
def '&&' (TK_DAND): $&&
def '==' (TK_EQUAL): $==
def '!=' (TK_NEQUAL): $!=
def '<=' (TK_LE): $<=
def '>=' (TK_GE): $>=

def identifier (TK_ID):
  $([:non-ascii-char:] | [A-Za-z_])([:non-ascii-char:] | [A-Za-z0-9_])*

def number (TK_NUM):
  $0x[A-Fa-f0-9]+
  $0[0-9]*
  $[1-9][0-9]*
  $'([^'\\] | \\.)'

def float (TK_FLT): $[0-9]+\.[0-9]+


def string (TK_STR):
  $"([^"\\] | \\.)*"

def end (TK_END): $\0

%state-length = "8
%encoding = "utf-8
%auto-clear-blank = "enable
%lexer-name = "tokenizer
%error-id = "-34
