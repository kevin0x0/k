import "charset/unicode

comment = $#[^\n\xFF]*
func-name = $([A-Za-z_] | [:uni-non-ascii:])([A-Za-z0-9_] | [:uni-non-ascii:])*

def declare (KEV_PTK_DECL):
  $decl

def set (KEV_PTK_SET):
  $set

def idof (KEV_PTK_IDOF):
  $idof

def 'import' (KEV_PTK_IMPORT):
  $import

def identifier (KEV_PTK_ID):
  (kev_plex_simple_id)  $([A-Za-z_\-] | [:uni-non-ascii:])([A-Za-z0-9_\-] | [:uni-non-ascii:])*
  (kev_plex_str_id)     $'([^'\\\xFF] | \\[^\xFF])*'

def string (KEV_PTK_STR):
  (kev_plex_str)        $"([^"\\\xFF] | \\[^\xFF])*"
  (kev_plex_simple_str) $`[^`]*`

def '(' (KEV_PTK_LP):
  $\(

def ')' (KEV_PTK_RP):
  $\)

def '[' (KEV_PTK_LBE):
  $\[

def ']' (KEV_PTK_RBE):
  $\]

def '{' (KEV_PTK_LBC):
  $\{

def '}' (KEV_PTK_RBC):
  $\}

def ',' (KEV_PTK_COMMA):
  $,

def ':' (KEV_PTK_COLON):
  $:

def ';' (KEV_PTK_SEMI):
  $;

def '|' (KEV_PTK_BAR):
  $\|

def '=' (KEV_PTK_ASSIGN, KEV_PTK_EQUAL):
  $=

def '<' (KEV_PTK_LESS):
  $<

def '%' (KEV_PTK_ENV):
  $%

def '..' (KEV_PTK_CONCAT):
  $\.\.

def blanks (KEV_PTK_BLKS):
  $([\ \n\t] | [:comment:])+

def number (KEV_PTK_NUM):
  (kev_plex_num) $[0-9]+

def end (KEV_PTK_END):
  $\xFF

%error-handler = "kev_plex_err
