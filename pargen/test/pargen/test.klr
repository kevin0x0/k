decl t: num, '+', '-', '*', '/', '(', ')', '$';
decl n: expr;

expr : expr '+' expr  ` $0 = $1 + $3; `
     | expr '-' expr  ` $0 = $1 - $3; `
     | expr '*' expr  ` $0 = $1 * $3; `
     | expr '/' expr  ` $0 = $1 / $3; `
     | '+' expr       ` $0 = $2; `
     | '-' expr       ` $0 = - $2; `
     | '(' expr ')'   ` $0 = $2; `
     | num            ` $0 = $1; `
     ;

#attribute settings
set prio '+'(post) = '-'(post) < '+' = '-' < '*'(post) = '/'(post) < '*' = '/' <;
set prio '+'(pre) = '-'(pre);
set start expr;
set end '$';
set con priority, shifting, log : "expr.log";

%placeholder = "\xFF";
%callback-type = "typedef void LRCallback(Symbol* stk);";
%callback-head = "static void " .. placeholder .. "(Symbol* stk) {\n";
%stk-idx-fmt = "stk[(" .. placeholder .. ") == 0 ? 0 : (" .. placeholder .. ") - 1]";
%attr-idx-fmt = stk-idx-fmt .. ".attr";
%callback-tail = "\n}\n";

%attr-definition = "int";
